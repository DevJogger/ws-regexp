"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.lazyAll = exports.jp2zh = exports.zh2jp = exports.zhs2jp = exports.zht2jp = exports.jp2zhs = exports.jp2zht = exports._fromA2B = void 0;
/**
 * Created by user on 2019/7/26.
 */
const core_1 = require("./core");
const array_hyper_unique_1 = require("array-hyper-unique");
function _fromA2B(char, from, to, options = {}) {
    const _table = options && options.safe ? core_1.TABLE_SAFE : core_1.TABLE;
    if (_table[from] && _table[to]) {
        let list = [];
        if (_table[from][char]) {
            if (_table[from][char][to]) {
                list.push(_table[from][char][to]);
            }
            Object.values(_table[to])
                .forEach(row => {
                if (row[from] === char && row[to]) {
                    list.push(row[to]);
                }
            });
            if (options && options.includeSelf) {
                list.push(char);
            }
            list = array_hyper_unique_1.array_unique_overwrite(list);
        }
        return list;
    }
    throw new RangeError(`${from}, ${to} is not exists in TABLE`);
}
exports._fromA2B = _fromA2B;
function jp2zht(char, options) {
    return _fromA2B(char, core_1.KEY_JP, core_1.KEY_ZHT, options);
}
exports.jp2zht = jp2zht;
function jp2zhs(char, options) {
    return _fromA2B(char, core_1.KEY_JP, core_1.KEY_ZHS, options);
}
exports.jp2zhs = jp2zhs;
function zht2jp(char, options) {
    return _fromA2B(char, core_1.KEY_ZHT, core_1.KEY_JP, options);
}
exports.zht2jp = zht2jp;
function zhs2jp(char, options) {
    return _fromA2B(char, core_1.KEY_ZHS, core_1.KEY_JP, options);
}
exports.zhs2jp = zhs2jp;
function zh2jp(char, options) {
    let arr = zht2jp(char, options)
        .concat(zhs2jp(char, options));
    return array_hyper_unique_1.array_unique_overwrite(arr);
}
exports.zh2jp = zh2jp;
function jp2zh(char, options) {
    let arr = jp2zht(char, options)
        .concat(jp2zhs(char, options));
    return array_hyper_unique_1.array_unique_overwrite(arr);
}
exports.jp2zh = jp2zh;
function lazyAll(char, options) {
    let arr = zh2jp(char, options)
        .reduce((a, b) => {
        a.push(b, ...jp2zh(b, options));
        return a;
    }, [])
        .concat(jp2zh(char, options)
        .reduce((a, b) => {
        a.push(b, ...zh2jp(b, options));
        return a;
    }, []));
    return array_hyper_unique_1.array_unique_overwrite(arr);
}
exports.lazyAll = lazyAll;
exports.default = exports;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImxpc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7O0dBRUc7QUFDSCxpQ0FBbUY7QUFDbkYsMkRBQTREO0FBUTVELFNBQWdCLFFBQVEsQ0FBQyxJQUFZLEVBQUUsSUFBa0IsRUFBRSxFQUFnQixFQUFFLFVBQW9CLEVBQUU7SUFFbEcsTUFBTSxNQUFNLEdBQUcsT0FBTyxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLGlCQUFVLENBQUMsQ0FBQyxDQUFDLFlBQUssQ0FBQztJQUU1RCxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQzlCO1FBQ0MsSUFBSSxJQUFJLEdBQWEsRUFBRSxDQUFDO1FBRXhCLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUN0QjtZQUNDLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUMxQjtnQkFDQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2FBQ2xDO1lBRUQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7aUJBQ3ZCLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRTtnQkFFZCxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUNqQztvQkFDQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2lCQUNuQjtZQUVGLENBQUMsQ0FBQyxDQUNGO1lBRUQsSUFBSSxPQUFPLElBQUksT0FBTyxDQUFDLFdBQVcsRUFDbEM7Z0JBQ0MsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUNoQjtZQUVELElBQUksR0FBRywyQ0FBc0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNwQztRQUVELE9BQU8sSUFBSSxDQUFBO0tBQ1g7SUFFRCxNQUFNLElBQUksVUFBVSxDQUFDLEdBQUcsSUFBSSxLQUFLLEVBQUUseUJBQXlCLENBQUMsQ0FBQTtBQUM5RCxDQUFDO0FBdENELDRCQXNDQztBQUVELFNBQWdCLE1BQU0sQ0FBQyxJQUFZLEVBQUUsT0FBa0I7SUFFdEQsT0FBTyxRQUFRLENBQUMsSUFBSSxFQUFFLGFBQU0sRUFBRSxjQUFPLEVBQUUsT0FBTyxDQUFDLENBQUE7QUFDaEQsQ0FBQztBQUhELHdCQUdDO0FBRUQsU0FBZ0IsTUFBTSxDQUFDLElBQVksRUFBRSxPQUFrQjtJQUV0RCxPQUFPLFFBQVEsQ0FBQyxJQUFJLEVBQUUsYUFBTSxFQUFFLGNBQU8sRUFBRSxPQUFPLENBQUMsQ0FBQTtBQUNoRCxDQUFDO0FBSEQsd0JBR0M7QUFFRCxTQUFnQixNQUFNLENBQUMsSUFBWSxFQUFFLE9BQWtCO0lBRXRELE9BQU8sUUFBUSxDQUFDLElBQUksRUFBRSxjQUFPLEVBQUUsYUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFBO0FBQ2hELENBQUM7QUFIRCx3QkFHQztBQUVELFNBQWdCLE1BQU0sQ0FBQyxJQUFZLEVBQUUsT0FBa0I7SUFFdEQsT0FBTyxRQUFRLENBQUMsSUFBSSxFQUFFLGNBQU8sRUFBRSxhQUFNLEVBQUUsT0FBTyxDQUFDLENBQUE7QUFDaEQsQ0FBQztBQUhELHdCQUdDO0FBRUQsU0FBZ0IsS0FBSyxDQUFDLElBQVksRUFBRSxPQUFrQjtJQUVyRCxJQUFJLEdBQUcsR0FBRyxNQUFNLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQztTQUM3QixNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBRWhDLE9BQU8sMkNBQXNCLENBQUMsR0FBRyxDQUFDLENBQUE7QUFDbkMsQ0FBQztBQU5ELHNCQU1DO0FBRUQsU0FBZ0IsS0FBSyxDQUFDLElBQVksRUFBRSxPQUFrQjtJQUVyRCxJQUFJLEdBQUcsR0FBRyxNQUFNLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQztTQUM3QixNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBRWhDLE9BQU8sMkNBQXNCLENBQUMsR0FBRyxDQUFDLENBQUE7QUFDbkMsQ0FBQztBQU5ELHNCQU1DO0FBRUQsU0FBZ0IsT0FBTyxDQUFDLElBQVksRUFBRSxPQUFrQjtJQUV2RCxJQUFJLEdBQUcsR0FBRyxLQUFLLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQztTQUM1QixNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFFaEIsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsR0FBRyxLQUFLLENBQUMsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFFaEMsT0FBTyxDQUFDLENBQUM7SUFDVixDQUFDLEVBQUUsRUFBYyxDQUFDO1NBQ2pCLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQztTQUMxQixNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFFaEIsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsR0FBRyxLQUFLLENBQUMsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFFaEMsT0FBTyxDQUFDLENBQUM7SUFDVixDQUFDLEVBQUUsRUFBYyxDQUFDLENBQUMsQ0FDcEI7SUFFRCxPQUFPLDJDQUFzQixDQUFDLEdBQUcsQ0FBQyxDQUFBO0FBQ25DLENBQUM7QUFuQkQsMEJBbUJDO0FBRUQsa0JBQWUsT0FBa0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlZCBieSB1c2VyIG9uIDIwMTkvNy8yNi5cbiAqL1xuaW1wb3J0IHsgVEFCTEUsIEtFWV9KUCwgS0VZX1pIVCwgS0VZX1pIUywgVEFCTEVfU0FGRSwgSUtFWV9GUk9NX1RPIH0gZnJvbSAnLi9jb3JlJztcbmltcG9ydCB7IGFycmF5X3VuaXF1ZV9vdmVyd3JpdGUgfSBmcm9tICdhcnJheS1oeXBlci11bmlxdWUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIElPcHRpb25zXG57XG5cdHNhZmU/OiBib29sZWFuLFxuXHRpbmNsdWRlU2VsZj86IGJvb2xlYW4sXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBfZnJvbUEyQihjaGFyOiBzdHJpbmcsIGZyb206IElLRVlfRlJPTV9UTywgdG86IElLRVlfRlJPTV9UTywgb3B0aW9uczogSU9wdGlvbnMgPSB7fSlcbntcblx0Y29uc3QgX3RhYmxlID0gb3B0aW9ucyAmJiBvcHRpb25zLnNhZmUgPyBUQUJMRV9TQUZFIDogVEFCTEU7XG5cblx0aWYgKF90YWJsZVtmcm9tXSAmJiBfdGFibGVbdG9dKVxuXHR7XG5cdFx0bGV0IGxpc3Q6IHN0cmluZ1tdID0gW107XG5cblx0XHRpZiAoX3RhYmxlW2Zyb21dW2NoYXJdKVxuXHRcdHtcblx0XHRcdGlmIChfdGFibGVbZnJvbV1bY2hhcl1bdG9dKVxuXHRcdFx0e1xuXHRcdFx0XHRsaXN0LnB1c2goX3RhYmxlW2Zyb21dW2NoYXJdW3RvXSk7XG5cdFx0XHR9XG5cblx0XHRcdE9iamVjdC52YWx1ZXMoX3RhYmxlW3RvXSlcblx0XHRcdFx0LmZvckVhY2gocm93ID0+IHtcblxuXHRcdFx0XHRcdGlmIChyb3dbZnJvbV0gPT09IGNoYXIgJiYgcm93W3RvXSlcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRsaXN0LnB1c2gocm93W3RvXSk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdH0pXG5cdFx0XHQ7XG5cblx0XHRcdGlmIChvcHRpb25zICYmIG9wdGlvbnMuaW5jbHVkZVNlbGYpXG5cdFx0XHR7XG5cdFx0XHRcdGxpc3QucHVzaChjaGFyKTtcblx0XHRcdH1cblxuXHRcdFx0bGlzdCA9IGFycmF5X3VuaXF1ZV9vdmVyd3JpdGUobGlzdCk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGxpc3Rcblx0fVxuXG5cdHRocm93IG5ldyBSYW5nZUVycm9yKGAke2Zyb219LCAke3RvfSBpcyBub3QgZXhpc3RzIGluIFRBQkxFYClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGpwMnpodChjaGFyOiBzdHJpbmcsIG9wdGlvbnM/OiBJT3B0aW9ucylcbntcblx0cmV0dXJuIF9mcm9tQTJCKGNoYXIsIEtFWV9KUCwgS0VZX1pIVCwgb3B0aW9ucylcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGpwMnpocyhjaGFyOiBzdHJpbmcsIG9wdGlvbnM/OiBJT3B0aW9ucylcbntcblx0cmV0dXJuIF9mcm9tQTJCKGNoYXIsIEtFWV9KUCwgS0VZX1pIUywgb3B0aW9ucylcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHpodDJqcChjaGFyOiBzdHJpbmcsIG9wdGlvbnM/OiBJT3B0aW9ucylcbntcblx0cmV0dXJuIF9mcm9tQTJCKGNoYXIsIEtFWV9aSFQsIEtFWV9KUCwgb3B0aW9ucylcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHpoczJqcChjaGFyOiBzdHJpbmcsIG9wdGlvbnM/OiBJT3B0aW9ucylcbntcblx0cmV0dXJuIF9mcm9tQTJCKGNoYXIsIEtFWV9aSFMsIEtFWV9KUCwgb3B0aW9ucylcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHpoMmpwKGNoYXI6IHN0cmluZywgb3B0aW9ucz86IElPcHRpb25zKVxue1xuXHRsZXQgYXJyID0gemh0MmpwKGNoYXIsIG9wdGlvbnMpXG5cdFx0LmNvbmNhdCh6aHMyanAoY2hhciwgb3B0aW9ucykpO1xuXG5cdHJldHVybiBhcnJheV91bmlxdWVfb3ZlcndyaXRlKGFycilcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGpwMnpoKGNoYXI6IHN0cmluZywgb3B0aW9ucz86IElPcHRpb25zKVxue1xuXHRsZXQgYXJyID0ganAyemh0KGNoYXIsIG9wdGlvbnMpXG5cdFx0LmNvbmNhdChqcDJ6aHMoY2hhciwgb3B0aW9ucykpO1xuXG5cdHJldHVybiBhcnJheV91bmlxdWVfb3ZlcndyaXRlKGFycilcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxhenlBbGwoY2hhcjogc3RyaW5nLCBvcHRpb25zPzogSU9wdGlvbnMpXG57XG5cdGxldCBhcnIgPSB6aDJqcChjaGFyLCBvcHRpb25zKVxuXHRcdC5yZWR1Y2UoKGEsIGIpID0+IHtcblxuXHRcdFx0YS5wdXNoKGIsIC4uLmpwMnpoKGIsIG9wdGlvbnMpKTtcblxuXHRcdFx0cmV0dXJuIGE7XG5cdFx0fSwgW10gYXMgc3RyaW5nW10pXG5cdFx0LmNvbmNhdChqcDJ6aChjaGFyLCBvcHRpb25zKVxuXHRcdFx0LnJlZHVjZSgoYSwgYikgPT4ge1xuXG5cdFx0XHRcdGEucHVzaChiLCAuLi56aDJqcChiLCBvcHRpb25zKSk7XG5cblx0XHRcdFx0cmV0dXJuIGE7XG5cdFx0XHR9LCBbXSBhcyBzdHJpbmdbXSkpXG5cdDtcblxuXHRyZXR1cm4gYXJyYXlfdW5pcXVlX292ZXJ3cml0ZShhcnIpXG59XG5cbmV4cG9ydCBkZWZhdWx0IGV4cG9ydHMgYXMgdHlwZW9mIGltcG9ydCgnLi9saXN0Jyk7XG4iXX0=