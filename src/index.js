"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const AST = require("./ast");
exports.AST = AST;
const parser_1 = require("./parser");
exports.RegExpParser = parser_1.RegExpParser;
const validator_1 = require("./validator");
exports.RegExpValidator = validator_1.RegExpValidator;
const visitor_1 = require("./visitor");
/**
 * Parse a given regular expression literal then make AST object.
 * @param source The source code to parse.
 * @param options The options to parse.
 * @returns The AST of the regular expression.
 */
function parseRegExpLiteral(source, options) {
    return new parser_1.RegExpParser(options).parseLiteral((source instanceof RegExp) ? source.toString() : source);
}
exports.parseRegExpLiteral = parseRegExpLiteral;
/**
 * Validate a given regular expression literal.
 * @param source The source code to validate.
 * @param options The options to validate.
 */
function validateRegExpLiteral(source, options) {
    return new validator_1.RegExpValidator(options).validateLiteral(source);
}
exports.validateRegExpLiteral = validateRegExpLiteral;
function visitRegExpAST(node, handlers) {
    new visitor_1.RegExpVisitor(handlers).visit(node);
}
exports.visitRegExpAST = visitRegExpAST;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDZCQUE2QjtBQUtwQixrQkFBRztBQUpaLHFDQUF1QztBQUl6Qix1QkFKTCxxQkFBWSxDQUlLO0FBSDFCLDJDQUE2QztBQUdqQiwwQkFIbkIsMkJBQWUsQ0FHbUI7QUFGM0MsdUNBQXlDO0FBSXpDOzs7OztHQUtHO0FBQ0gsU0FBZ0Isa0JBQWtCLENBQzlCLE1BQXVCLEVBQ3ZCLE9BQThCO0lBRTlCLE9BQU8sSUFBSSxxQkFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLE1BQU0sWUFBWSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQTtBQUMxRyxDQUFDO0FBTEQsZ0RBS0M7QUFFRDs7OztHQUlHO0FBQ0gsU0FBZ0IscUJBQXFCLENBQ2pDLE1BQWMsRUFDZCxPQUFpQztJQUVqQyxPQUFPLElBQUksMkJBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxlQUFlLENBQUMsTUFBTSxDQUFDLENBQUE7QUFDL0QsQ0FBQztBQUxELHNEQUtDO0FBRUQsU0FBZ0IsY0FBYyxDQUMxQixJQUFjLEVBQ2QsUUFBZ0M7SUFFaEMsSUFBSSx1QkFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQTtBQUMzQyxDQUFDO0FBTEQsd0NBS0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQVNUID0gcmVxdWlyZShcIi4vYXN0XCIpXG5pbXBvcnQgeyBSZWdFeHBQYXJzZXIgfSBmcm9tIFwiLi9wYXJzZXJcIlxuaW1wb3J0IHsgUmVnRXhwVmFsaWRhdG9yIH0gZnJvbSBcIi4vdmFsaWRhdG9yXCJcbmltcG9ydCB7IFJlZ0V4cFZpc2l0b3IgfSBmcm9tIFwiLi92aXNpdG9yXCJcblxuZXhwb3J0IHsgQVNULCBSZWdFeHBQYXJzZXIsIFJlZ0V4cFZhbGlkYXRvciB9XG5cbi8qKlxuICogUGFyc2UgYSBnaXZlbiByZWd1bGFyIGV4cHJlc3Npb24gbGl0ZXJhbCB0aGVuIG1ha2UgQVNUIG9iamVjdC5cbiAqIEBwYXJhbSBzb3VyY2UgVGhlIHNvdXJjZSBjb2RlIHRvIHBhcnNlLlxuICogQHBhcmFtIG9wdGlvbnMgVGhlIG9wdGlvbnMgdG8gcGFyc2UuXG4gKiBAcmV0dXJucyBUaGUgQVNUIG9mIHRoZSByZWd1bGFyIGV4cHJlc3Npb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVJlZ0V4cExpdGVyYWwoXG4gICAgc291cmNlOiBzdHJpbmcgfCBSZWdFeHAsXG4gICAgb3B0aW9ucz86IFJlZ0V4cFBhcnNlci5PcHRpb25zLFxuKTogQVNULlJlZ0V4cExpdGVyYWwge1xuICAgIHJldHVybiBuZXcgUmVnRXhwUGFyc2VyKG9wdGlvbnMpLnBhcnNlTGl0ZXJhbCgoc291cmNlIGluc3RhbmNlb2YgUmVnRXhwKSA/IHNvdXJjZS50b1N0cmluZygpIDogc291cmNlKVxufVxuXG4vKipcbiAqIFZhbGlkYXRlIGEgZ2l2ZW4gcmVndWxhciBleHByZXNzaW9uIGxpdGVyYWwuXG4gKiBAcGFyYW0gc291cmNlIFRoZSBzb3VyY2UgY29kZSB0byB2YWxpZGF0ZS5cbiAqIEBwYXJhbSBvcHRpb25zIFRoZSBvcHRpb25zIHRvIHZhbGlkYXRlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVSZWdFeHBMaXRlcmFsKFxuICAgIHNvdXJjZTogc3RyaW5nLFxuICAgIG9wdGlvbnM/OiBSZWdFeHBWYWxpZGF0b3IuT3B0aW9ucyxcbik6IHZvaWQge1xuICAgIHJldHVybiBuZXcgUmVnRXhwVmFsaWRhdG9yKG9wdGlvbnMpLnZhbGlkYXRlTGl0ZXJhbChzb3VyY2UpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB2aXNpdFJlZ0V4cEFTVChcbiAgICBub2RlOiBBU1QuTm9kZSxcbiAgICBoYW5kbGVyczogUmVnRXhwVmlzaXRvci5IYW5kbGVycyxcbik6IHZvaWQge1xuICAgIG5ldyBSZWdFeHBWaXNpdG9yKGhhbmRsZXJzKS52aXNpdChub2RlKVxufVxuIl19